import React, { useState } from "react";
import { Link } from "react-router-dom";
import Navigation from "../components/Navigation";
import { departments, doctors } from "../data/hospitalData";
import { useAppointments } from "../context/AppointmentContext";
import { postToAPI } from "../services/api";

const Appointments = () => {
  const { addAppointment } = useAppointments();

  const [formData, setFormData] = useState({
    name: "",
    email: "",
    phone: "",
    date: "",
    time: "",
    department: "General",
    doctor: "",
    reason: "",
  });

  const [bookingComplete, setBookingComplete] = useState(false);
  const [patientId, setPatientId] = useState("");

  // Departments and doctors are imported from hospitalData.js

  const handleChange = (e) => {
    const { name, value } = e.target;

    setFormData({
      ...formData,
      [name]: value,
      // Reset doctor when department changes
      ...(name === "department" && { doctor: "" }),
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    // Format the date in a more readable format
    const dateObj = new Date(formData.date);
    const formattedDate = dateObj.toLocaleDateString("en-US", {
      year: "numeric",
      month: "long",
      day: "numeric",
    });

    // Create a new appointment object
    const newAppointment = {
      // patientId will be generated by the backend
      name: formData.name,
      email: formData.email,
      phone: formData.phone,
      date: formattedDate,
      time: formData.time,
      doctor: formData.doctor || "To be assigned",
      department: formData.department,
      reason: formData.reason || "",
      status: "Pending",
    };

    try {
      console.log("Submitting appointment data:", newAppointment);

      // Send the appointment data to the backend API
      const response = await postToAPI("/appointments", newAppointment);

      console.log("API response:", response);

      if (response && response.success) {
        // Get the MongoDB _id from the backend response
        const mongoId = response.data?._id;
        console.log("MongoDB ID to display:", mongoId);
        setPatientId(mongoId);

        // Add the appointment with the MongoDB _id to the context
        const appointmentWithId = {
          ...newAppointment,
          _id: mongoId,
        };
        addAppointment(appointmentWithId);

        // Show the booking confirmation with patient ID
        setBookingComplete(true);
      } else {
        // Show detailed error message
        const errorMessage = response.details
          ? `Error: ${response.message}\n\nDetails: ${JSON.stringify(
              response.details,
              null,
              2
            )}`
          : response.message || "Unknown error";

        console.error("Appointment booking error:", errorMessage);
        alert(
          `There was an error booking your appointment: ${response.message}\n\nPlease try again.`
        );
      }
    } catch (error) {
      const errorMessage = error.toString();
      console.error("Error booking appointment:", errorMessage);
      alert(
        `There was an error connecting to the server: ${errorMessage}\n\nPlease try again later.`
      );
    }
  };

  const handleNewAppointment = () => {
    // Reset form and booking state
    setFormData({
      name: "",
      email: "",
      phone: "",
      date: "",
      time: "",
      department: "General",
      doctor: "",
      reason: "",
    });
    setBookingComplete(false);
    setPatientId("");
  };

  return (
    <div className="min-h-screen bg-gray-100 flex flex-col">
      <div className="flex-1 p-6 w-full mx-auto overflow-y-auto">
        <div className="mb-3 flex justify-between items-center">
          <h1 className="text-3xl font-bold text-secondary">
            {bookingComplete ? "Appointment Confirmed" : "Book an Appointment"}
          </h1>
          <div>
            <Link to="/" className="text-primary hover:underline">
              ‚Üê Back to Home
            </Link>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow-md p-4 md:p-6 w-full">
          {bookingComplete ? (
            <div className="text-center py-8">
              <div className="inline-flex items-center justify-center w-16 h-16 rounded-full bg-green-100 text-green-500 mb-4">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className="h-8 w-8"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M5 13l4 4L19 7"
                  />
                </svg>
              </div>
              <h2 className="text-2xl font-bold text-gray-800 mb-2">
                Appointment Booked Successfully!
              </h2>
              <p className="text-gray-600 mb-6">
                We will contact you shortly to confirm your appointment.
              </p>

              <div className="max-w-md mx-auto bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
                <h3 className="font-semibold text-blue-800 mb-2">
                  Your Patient ID
                </h3>
                <div className="bg-white border border-blue-300 rounded p-3 text-center">
                  <span className="text-xl font-mono font-bold text-blue-700">
                    {patientId || "ID not available"}
                  </span>
                </div>
                <p className="text-sm text-blue-700 mt-2">
                  Please save this ID. You'll need it to access your appointment
                  details and medical records.
                </p>
              </div>

              <div className="mt-4 space-y-3">
                <h3 className="font-medium">Appointment Details:</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-2 text-left max-w-lg mx-auto">
                  <div className="text-gray-600">Name:</div>
                  <div className="font-medium">{formData.name}</div>
                  <div className="text-gray-600">Department:</div>
                  <div className="font-medium">{formData.department}</div>
                  <div className="text-gray-600">Doctor:</div>
                  <div className="font-medium">
                    {formData.doctor || "To be assigned"}
                  </div>
                  <div className="text-gray-600">Date & Time:</div>
                  <div className="font-medium">
                    {formData.date} at {formData.time}
                  </div>
                </div>
              </div>

              <div className="mt-8 flex justify-center space-x-4">
                <Link
                  to="/user-dashboard"
                  className="bg-primary text-white font-medium py-2 px-6 rounded-md hover:bg-blue-700 transition-colors"
                >
                  Go to Dashboard
                </Link>
                <button
                  onClick={handleNewAppointment}
                  className="border border-primary text-primary font-medium py-2 px-6 rounded-md hover:bg-blue-50 transition-colors"
                >
                  Book Another Appointment
                </button>
              </div>
            </div>
          ) : (
            <form onSubmit={handleSubmit} className="space-y-2">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                {/* Patient Information */}
                <div className="space-y-6">
                  <h2 className="text-xl font-semibold text-secondary border-b pb-2">
                    Patient Information
                  </h2>

                  <div>
                    <label
                      htmlFor="name"
                      className="block text-sm font-medium text-gray-700 mb-0.5"
                    >
                      Full Name *
                    </label>
                    <input
                      type="text"
                      id="name"
                      name="name"
                      value={formData.name}
                      onChange={handleChange}
                      required
                      className="w-full px-2 py-1 border border-gray-300 rounded-md focus:ring-primary focus:border-primary"
                      placeholder="Enter your full name"
                    />
                  </div>

                  <div>
                    <label
                      htmlFor="email"
                      className="block text-sm font-medium text-gray-700 mb-0.5"
                    >
                      Email Address *
                    </label>
                    <input
                      type="email"
                      id="email"
                      name="email"
                      value={formData.email}
                      onChange={handleChange}
                      required
                      className="w-full px-2 py-1 border border-gray-300 rounded-md focus:ring-primary focus:border-primary"
                      placeholder="Enter your email address"
                    />
                  </div>

                  <div>
                    <label
                      htmlFor="phone"
                      className="block text-sm font-medium text-gray-700 mb-0.5"
                    >
                      Phone Number *
                    </label>
                    <input
                      type="tel"
                      id="phone"
                      name="phone"
                      value={formData.phone}
                      onChange={handleChange}
                      required
                      className="w-full px-2 py-1 border border-gray-300 rounded-md focus:ring-primary focus:border-primary"
                      placeholder="Enter your phone number"
                    />
                  </div>
                </div>

                {/* Appointment Details */}
                <div className="space-y-6">
                  <h2 className="text-xl font-semibold text-secondary border-b pb-2">
                    Appointment Details
                  </h2>

                  <div>
                    <label
                      htmlFor="date"
                      className="block text-sm font-medium text-gray-700 mb-0.5"
                    >
                      Preferred Date *
                    </label>
                    <input
                      type="date"
                      id="date"
                      name="date"
                      value={formData.date}
                      onChange={handleChange}
                      required
                      min={new Date().toISOString().split("T")[0]}
                      className="w-full px-2 py-1 border border-gray-300 rounded-md focus:ring-primary focus:border-primary"
                    />
                  </div>

                  <div>
                    <label
                      htmlFor="time"
                      className="block text-sm font-medium text-gray-700 mb-0.5"
                    >
                      Preferred Time *
                    </label>
                    <input
                      type="time"
                      id="time"
                      name="time"
                      value={formData.time}
                      onChange={handleChange}
                      required
                      className="w-full px-2 py-1 border border-gray-300 rounded-md focus:ring-primary focus:border-primary"
                    />
                  </div>

                  <div>
                    <label
                      htmlFor="department"
                      className="block text-sm font-medium text-gray-700 mb-0.5"
                    >
                      Department *
                    </label>
                    <select
                      id="department"
                      name="department"
                      value={formData.department}
                      onChange={handleChange}
                      required
                      className="w-full px-2 py-1 border border-gray-300 rounded-md focus:ring-primary focus:border-primary"
                    >
                      {departments.map((dept) => (
                        <option key={dept} value={dept}>
                          {dept}
                        </option>
                      ))}
                    </select>
                  </div>

                  <div>
                    <label
                      htmlFor="doctor"
                      className="block text-sm font-medium text-gray-700 mb-0.5"
                    >
                      Preferred Doctor
                    </label>
                    <select
                      id="doctor"
                      name="doctor"
                      value={formData.doctor}
                      onChange={handleChange}
                      className="w-full px-2 py-1 border border-gray-300 rounded-md focus:ring-primary focus:border-primary"
                    >
                      <option value="">Select a doctor</option>
                      {doctors[formData.department]?.map((doctor) => (
                        <option key={doctor} value={doctor}>
                          {doctor}
                        </option>
                      ))}
                    </select>
                  </div>
                </div>
              </div>

              {/* Reason for Visit */}
              <div>
                <label
                  htmlFor="reason"
                  className="block text-sm font-medium text-gray-700 mb-0.5"
                >
                  Reason for Visit
                </label>
                <textarea
                  id="reason"
                  name="reason"
                  value={formData.reason}
                  onChange={handleChange}
                  rows="4"
                  className="w-full px-2 py-1 border border-gray-300 rounded-md focus:ring-primary focus:border-primary"
                  placeholder="Please briefly describe your symptoms or reason for appointment"
                ></textarea>
              </div>

              <div className="flex justify-end">
                <button
                  type="submit"
                  className="bg-primary text-white font-medium py-2 px-6 rounded-md hover:bg-blue-700 transition-colors"
                >
                  Book Appointment
                </button>
              </div>
            </form>
          )}
        </div>
      </div>
    </div>
  );
};

export default Appointments;
